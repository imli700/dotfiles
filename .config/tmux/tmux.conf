# tmux.conf for the anaconda environment

bind -n M-tab next
bind -n F1 list-keys

set-option -s exit-unattached off
set-option -g base-index 1

# tmux 2.4 has different name for this option.
# See https://github.com/rhinstaller/anaconda/pull/1040
# This checks if the current tmux version (from tmux -V) >= 2.4, using
# sort -V to do a version-y comparison (and -r to reverse it)
if-shell '[ $(printf "$(tmux -V | cut -d" " -f2)\n2.4" | sort -Vr | head -n1) == $(tmux -V | cut -d" " -f2) ]' \
    'set-option -g remain-on-exit on' \
    'set-option -g set-remain-on-exit on'

set-option -g history-limit 10000

# The idea here is to detach the client started here via anaconda.service, and
# then re-attach to it in the tmux service run on the console tty.
new-session -d -s anaconda -n main anaconda

set-option status-right '#[fg=blue]#(echo -n "Switch tab: Alt+Tab | Help: F1 ")'

new-window -d -n shell          "bash --login"
new-window -d -n log            "tail -F /tmp/anaconda.log"
new-window -d -n storage-log    "tail -F /tmp/storage.log"
new-window -d -n program-log    "tail -F /tmp/program.log"
new-window -d -n packaging-log  "tail -F /tmp/packaging.log"

# vi mode for tmux
setw -g mode-keys vi


# to fasten bash vim mode
 set -sg escape-time 0

# to change prefix
unbind C-b
set-option -g prefix M-m

# to fix astronvim colors
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
